##########################################################################
### System config ########################################################
# Port
server.port=8080

# White label
server.error.whitelabel.enabled=true

########################################################################
### Log ################################################################
# Log
logging.file.name=./log/blog.log

# OFF > FATAL > ERROR > WARN > INFO >DEBUG > TRACE
logging.level.root=INFO

########################################################################
### Servlet ############################################################
# servlet
server.servlet.context-parameters.secretinformation=FictionShop

########################################################################
### Swagger ############################################################
# swagger open api 3.0
# http://localhost:8080/swagger-ui.html
# http://localhost:8080/v3/api-docs/
# http://localhost:8080/api-docs/
# springdoc.api-docs.path=/api-docs
# springdoc.swagger-ui.path=/swagger-ui-custom.html


########################################################################
### Thymeleaf ##########################################################
# Thymeleaf
spring.thymeleaf.enabled=true


spring.servlet.multipart.max-file-size=128MB
spring.servlet.multipart.max-request-size=128MB
spring.http.multipart.enabled=true
upload.path=/src/main/resources/static/images/fictionshop/product/




########################################################################
### Security ###########################################################
# JWT
jwt.secret=fictionshop
#jwt.tokenvalidity=2592000

########################################################################
### Database  ##########################################################
# jpa > none=yok
# create      =Eger tablo yoksa tablo olustur varsa birsey yapma,
# create-drop =Eger tablo yoksa tablo olustur varsa tabloyu sil,
# update      =Eger tablo yoksa tablo olustur varsa güncelle yapma,
# validate
## Database config
logging.level.org.springframework.jdbc.core = TRACE
spring.jpa.properties.hibernate.format_sql =true
spring.jpa.properties.hibernate.show_sql=true


# önce create sonra  durdur update yap
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create

## H2DB
# http://localhost:8080/h2-console
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:file:./Database/fictionshopdb
spring.datasource.username=fictionshop
spring.datasource.password=1234
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

### Postgresql
##CREATE DATABASE denemedb  WITH  OWNER = postgres  ENCODING = 'UTF8'  CONNECTION LIMIT = -1;
#spring.datasource.url=jdbc:postgresql://localhost:5432/denemedb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true